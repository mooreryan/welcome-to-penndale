module LetterDayCalendar exposing
    ( LetterDay
    , letterDayFromTime
    , letterDayImgInfo
    )

import Dict exposing (Dict)
import Time


type LetterDay
    = A
    | B
    | C
    | D
    | E
    | F
    | None


letterDayFromTime : Time.Zone -> Time.Posix -> LetterDay
letterDayFromTime zone posix =
    case Dict.get (dateKey zone posix) letterDayCalendar of
        Just letterDay ->
            letterDay

        Nothing ->
            None


-- For winter: penndale-letter-days-a.svg
-- For spring: penndale-letter-days-a-spring.svg
letterDayImgInfo : LetterDay -> { src : String, alt : String }
letterDayImgInfo letterDay =
    case letterDay of
        A ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-a-spring.svg"
            , alt = "A Day"
            }

        B ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-b-spring.svg"
            , alt = "B Day"
            }

        C ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-c-spring.svg"
            , alt = "C Day"
            }

        D ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-d-spring.svg"
            , alt = "D Day"
            }

        E ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-e-spring.svg"
            , alt = "E Day"
            }

        F ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-f-spring.svg"
            , alt = "F Day"
            }

        None ->
            { src = "%PUBLIC_URL%/assets/images/penndale-letter-days-none-spring.svg"
            , alt = "We're off today!"
            }



-- UTILS


{-| This is the format of the keys for the letter day calendar dict.
-}
dateKey : Time.Zone -> Time.Posix -> String
dateKey zone posix =
    let
        day =
            Time.toDay zone posix
                |> String.fromInt
                |> String.padLeft 2 '0'

        month =
            Time.toMonth zone posix
                |> toMonthNumber

        year =
            Time.toYear zone posix
                |> String.fromInt
    in
    -- E.g., 2020-10-20
    year ++ "-" ++ month ++ "-" ++ day


toMonthNumber : Time.Month -> String
toMonthNumber month =
    case month of
        Time.Jan ->
            "01"

        Time.Feb ->
            "02"

        Time.Mar ->
            "03"

        Time.Apr ->
            "04"

        Time.May ->
            "05"

        Time.Jun ->
            "06"

        Time.Jul ->
            "07"

        Time.Aug ->
            "08"

        Time.Sep ->
            "09"

        Time.Oct ->
            "10"

        Time.Nov ->
            "11"

        Time.Dec ->
            "12"


{-| DON'T EDIT DIRECTLY: Auto generated by the parse\_letter\_day\_calendar.rb
script.
-}
letterDayCalendar : Dict String LetterDay
letterDayCalendar =
    Dict.fromList
        [ ( "2021-02-02", D )
        , ( "2021-02-03", E )
        , ( "2021-02-04", F )
        , ( "2021-02-05", A )
        , ( "2021-02-08", B )
        , ( "2021-02-09", C )
        , ( "2021-02-10", D )
        , ( "2021-02-11", E )
        , ( "2021-02-16", F )
        , ( "2021-02-17", A )
        , ( "2021-02-18", B )
        , ( "2021-02-19", C )
        , ( "2021-02-22", D )
        , ( "2021-02-23", E )
        , ( "2021-02-24", F )
        , ( "2021-02-25", A )
        , ( "2021-02-26", B )
        , ( "2021-03-01", C )
        , ( "2021-03-02", D )
        , ( "2021-03-03", E )
        , ( "2021-03-04", F )
        , ( "2021-03-05", A )
        , ( "2021-03-08", B )
        , ( "2021-03-09", C )
        , ( "2021-03-10", D )
        , ( "2021-03-11", E )
        , ( "2021-03-12", F )
        , ( "2021-03-15", A )
        , ( "2021-03-16", B )
        , ( "2021-03-17", C )
        , ( "2021-03-18", D )
        , ( "2021-03-19", E )
        , ( "2021-03-22", F )
        , ( "2021-03-23", A )
        , ( "2021-03-24", B )
        , ( "2021-03-25", C )
        , ( "2021-03-26", D )
        , ( "2021-03-29", E )
        , ( "2021-03-30", F )
        , ( "2021-04-06", A )
        , ( "2021-04-07", B )
        , ( "2021-04-08", C )
        , ( "2021-04-09", D )
        , ( "2021-04-12", E )
        , ( "2021-04-13", F )
        , ( "2021-04-14", A )
        , ( "2021-04-15", B )
        , ( "2021-04-16", C )
        , ( "2021-04-19", D )
        , ( "2021-04-20", E )
        , ( "2021-04-21", F )
        , ( "2021-04-22", A )
        , ( "2021-04-23", B )
        , ( "2021-04-26", C )
        , ( "2021-04-27", D )
        , ( "2021-04-28", E )
        , ( "2021-04-29", F )
        , ( "2021-04-30", A )
        , ( "2021-05-03", B )
        , ( "2021-05-04", C )
        , ( "2021-05-05", D )
        , ( "2021-05-06", E )
        , ( "2021-05-07", F )
        , ( "2021-05-10", A )
        , ( "2021-05-11", B )
        , ( "2021-05-12", C )
        , ( "2021-05-13", D )
        , ( "2021-05-14", E )
        , ( "2021-05-17", F )
        , ( "2021-05-19", A )
        , ( "2021-05-20", B )
        , ( "2021-05-21", C )
        , ( "2021-05-24", D )
        , ( "2021-05-25", E )
        , ( "2021-05-26", F )
        , ( "2021-05-27", A )
        , ( "2021-05-28", B )
        , ( "2021-06-01", C )
        , ( "2021-06-02", D )
        , ( "2021-06-03", E )
        , ( "2021-06-04", F )
        , ( "2021-06-07", A )
        , ( "2021-06-08", B )
        , ( "2021-06-09", C )
        , ( "2021-06-10", D )
        , ( "2021-06-11", E )
        ]
